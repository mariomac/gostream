version: "2"
issues:
  # Maximum issues count per one linter.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  max-same-issues: 0

formatters:
  enable:
    - gci
    - gofumpt

  settings:
    gofmt:
      # simplify code: gofmt with `-s` option, true by default
      simplify: true

    gci:
      sections:
        - standard
        - default
        - prefix(github.com/mariomac)
        - localmodule

# options for analysis running
run:
  go: "1.24"

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true

  # default concurrency is a available CPU number
  concurrency: 4

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  modules-download-mode: readonly

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 10m
